"use client"

import { useState } from 'react'
import {
  BarChart3,
  Bell,
  CreditCard,
  Home,
  Menu,
  Search,
  Settings,
  Store,
  Users,
  Wallet,
} from "lucide-react"
import { Inter } from "next/font/google"
import Image from "next/image"
import Link from "next/link"
import { Line, Pie } from 'react-chartjs-2'

import { Badge } from "@/components/ui/badge"
import { Button } from "@/components/ui/button"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import {
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuLabel,
  DropdownMenuSeparator,
  DropdownMenuTrigger,
} from "@/components/ui/dropdown-menu"
import { Input } from "@/components/ui/input"
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from "@/components/ui/table"
import { Sidebar } from "@/components/sidebar"

const inter = Inter({ subsets: ["latin"] })

export default function Dashboard() {
  const [isMobileOpen, setIsMobileOpen] = useState(false)
  const [activeTimeFilter, setActiveTimeFilter] = useState("Last Year")
  const [selectedRange, setSelectedRange] = useState("6m")
  
  // Sample chart data
  const fundsLineData = {
    labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'],
    datasets: [{
      label: 'Funds Disbursed',
      data: [12, 19, 3, 5, 2, 3],
      borderColor: 'rgb(75, 192, 192)',
      backgroundColor: 'rgba(75, 192, 192, 0.5)',
    }],
  }
  
  const fundsLineOptions = {
    responsive: true,
    maintainAspectRatio: false,
    plugins: {
      legend: { display: false },
    }
  }
  
  const schemeFilters = [
    { key: "girls", label: "Girls Education", active: true, color: "#FF6384" },
    { key: "farmers", label: "Farmer Support", active: true, color: "#36A2EB" },
    { key: "health", label: "Healthcare", active: true, color: "#FFCE56" },
    { key: "elderly", label: "Senior Citizens", active: true, color: "#4BC0C0" },
  ]
  const [activeFilters, setActiveFilters] = useState(schemeFilters.filter(f => f.active).map(f => f.key))

  // Toggle a filter
  const toggleFilter = (key) => {
    if (activeFilters.includes(key)) {
      if (activeFilters.length > 1) {
        setActiveFilters(activeFilters.filter(f => f !== key))
      }
    } else {
      setActiveFilters([...activeFilters, key])
    }
  }

  // Donut chart data
  const donutDataByFilter = {
    girls: { value: 25, color: "#FF6384" },
    farmers: { value: 30, color: "#36A2EB" },
    health: { value: 25, color: "#FFCE56" },
    elderly: { value: 20, color: "#4BC0C0" },
  }

  const filteredDonut = activeFilters.map(f => donutDataByFilter[f])
  const donutChartData = {
    labels: activeFilters.map(f => schemeFilters.find(s => s.key === f)?.label),
    datasets: [
      {
        data: filteredDonut.map(d => d.value),
        backgroundColor: filteredDonut.map(d => d.color),
        borderWidth: 0,
        hoverOffset: 8,
      },
    ],
  }

  const donutChartOptions = {
    cutout: '70%',
    plugins: {
      legend: { display: false },
    },
  }
  
  const totalDistributed = filteredDonut.reduce((sum, d) => sum + d.value, 0)
  
  // Dummy data for tables
  const beneficiaries = [
    { name: "Rajesh Kumar", state: "Uttar Pradesh", gender: "Male", aadhaar: "1234" },
    { name: "Priya Singh", state: "Bihar", gender: "Female", aadhaar: "5678" },
    { name: "Amit Patel", state: "Gujarat", gender: "Male", aadhaar: "9012" },
  ]

  return (
    <div className={`${inter.className} min-h-screen bg-white flex`}>
      <Sidebar pathname="/" isMobileOpen={isMobileOpen} setIsMobileOpen={setIsMobileOpen} />
      
      <div className="flex-1 md:ml-[240px] transition-all duration-300">
        <header className="sticky top-0 z-10 flex h-14 items-center gap-4 border-b bg-white px-4 sm:px-6">
          <Button variant="ghost" size="icon" className="md:hidden" onClick={() => setIsMobileOpen(true)}>
            <Menu className="h-5 w-5" />
            <span className="sr-only">Toggle menu</span>
          </Button>
          <div className="ml-auto flex items-center gap-4">
            <form className="hidden md:block">
              <div className="relative">
                <Search className="absolute left-2.5 top-2.5 h-4 w-4 text-gray-500" />
                <Input
                  type="search"
                  placeholder="Search..."
                  className="w-[320px] pl-8 bg-gray-50 border-gray-200"
                />
              </div>
            </form>
            <Button variant="ghost" size="icon" className="relative">
              <Bell className="h-5 w-5" />
              <Badge className="absolute -right-1 -top-1 h-5 w-5 rounded-full p-0 flex items-center justify-center bg-black text-white">
                3
              </Badge>
            </Button>
            <DropdownMenu>
              <DropdownMenuTrigger asChild>
                <Button variant="ghost" size="icon" className="rounded-full">
                  <Image
                    src="/placeholder.svg?height=32&width=32"
                    width={32}
                    height={32}
                    className="rounded-full"
                    alt="Admin avatar"
                  />
                </Button>
              </DropdownMenuTrigger>
              <DropdownMenuContent align="end">
                <DropdownMenuLabel>My Account</DropdownMenuLabel>
                <DropdownMenuSeparator />
                <DropdownMenuItem>Profile</DropdownMenuItem>
                <DropdownMenuItem>Settings</DropdownMenuItem>
                <DropdownMenuSeparator />
                <DropdownMenuItem>Logout</DropdownMenuItem>
              </DropdownMenuContent>
            </DropdownMenu>
          </div>
        </header>

        <main className="p-4 sm:p-6">
          <div className="flex items-center justify-between mb-6">
            <h1 className="text-2xl font-bold">Dashboard</h1>
            <Button className="bg-[#2563EB] hover:bg-[#1d4ed8]">Generate Report</Button>
          </div>

          <div className="grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-4 mb-6">
            <Card>
              <CardHeader className="flex flex-row items-center justify-between pb-2">
                <CardTitle className="text-sm font-medium text-gray-500">Total Schemes</CardTitle>
                <CreditCard className="h-4 w-4 text-gray-500" />
              </CardHeader>
              <CardContent>
                <div className="text-2xl font-bold">65</div>
                <p className="text-xs text-green-500 flex items-center">+5.1% from last month</p>
              </CardContent>
            </Card>
            <Card>
              <CardHeader className="flex flex-row items-center justify-between pb-2">
                <CardTitle className="text-sm font-medium text-gray-500">Total Beneficiaries</CardTitle>
                <Users className="h-4 w-4 text-gray-500" />
              </CardHeader>
              <CardContent>
                <div className="text-2xl font-bold">3.2M</div>
                <p className="text-xs text-green-500 flex items-center">+12.4% from last month</p>
              </CardContent>
            </Card>
            <Card>
              <CardHeader className="flex flex-row items-center justify-between pb-2">
                <CardTitle className="text-sm font-medium text-gray-500">Total Fund Allocated</CardTitle>
                <Wallet className="h-4 w-4 text-gray-500" />
              </CardHeader>
              <CardContent>
                <div className="text-2xl font-bold">â‚¹8,500 Cr</div>
                <p className="text-xs text-green-500 flex items-center">+7.8% from last month</p>
              </CardContent>
            </Card>
            <Card>
              <CardHeader className="flex flex-row items-center justify-between pb-2">
                <CardTitle className="text-sm font-medium text-gray-500">Pending Approvals</CardTitle>
                <BarChart3 className="h-4 w-4 text-gray-500" />
              </CardHeader>
              <CardContent>
                <div className="text-2xl font-bold">42</div>
                <p className="text-xs text-red-500 flex items-center">+2.5% from last month</p>
              </CardContent>
            </Card>
          </div>

          <div className="grid gap-6 md:grid-cols-2 mb-6">
            <Card>
              <CardHeader className="flex flex-row items-center justify-between">
                <CardTitle>Monthly Funds Disbursed</CardTitle>
                <DropdownMenu>
                  <DropdownMenuTrigger asChild>
                    <Button variant="outline" size="sm">
                      {activeTimeFilter}
                    </Button>
                  </DropdownMenuTrigger>
                  <DropdownMenuContent>
                    {["Last Week", "Last Month", "Last 6 Months", "Last Year", "All Time"].map(option => (
                      <DropdownMenuItem key={option} onClick={() => setActiveTimeFilter(option)}>
                        {option}
                      </DropdownMenuItem>
                    ))}
                  </DropdownMenuContent>
                </DropdownMenu>
              </CardHeader>
              <CardContent>
                <div className="h-[300px]">
                  <Line data={fundsLineData} options={fundsLineOptions} />
                </div>
              </CardContent>
            </Card>
            
            <Card>
              <CardHeader>
                <CardTitle>Funds Distributed by Scheme</CardTitle>
              </CardHeader>
              <CardContent className="h-[300px] relative">
                <Pie data={donutChartData} options={donutChartOptions} />
                <div className="absolute inset-0 flex items-center justify-center pointer-events-none">
                  <div className="text-center">
                    <div className="text-3xl font-bold">{`${totalDistributed}%`}</div>
                    <div className="text-sm text-gray-500">Total</div>
                  </div>
                </div>
              </CardContent>
              <div className="px-6 pb-6 grid grid-cols-2 sm:grid-cols-4 gap-2">
                {schemeFilters.map((filter) => (
                  <button
                    key={filter.key}
                    onClick={() => toggleFilter(filter.key)}
                    className={`flex items-center gap-2 py-1 px-2 rounded-md text-sm ${
                      activeFilters.includes(filter.key)
                        ? 'bg-gray-100 text-gray-800'
                        : 'text-gray-600 hover:bg-gray-50'
                    }`}
                  >
                    <div
                      className="h-3 w-3 rounded-full"
                      style={{ backgroundColor: filter.color }}
                    />
                    <span>{filter.label}</span>
                  </button>
                ))}
              </div>
            </Card>
          </div>

          <div className="grid gap-6 md:grid-cols-2">
            <Card>
              <CardHeader>
                <CardTitle>Recent Beneficiaries</CardTitle>
              </CardHeader>
              <CardContent>
                <Table>
                  <TableHeader>
                    <TableRow>
                      <TableHead>Name</TableHead>
                      <TableHead>State</TableHead>
                      <TableHead>Gender</TableHead>
                      <TableHead>Aadhaar Last 4</TableHead>
                    </TableRow>
                  </TableHeader>
                  <TableBody>
                    {beneficiaries.map((beneficiary) => (
                      <TableRow key={beneficiary.name}>
                        <TableCell className="font-medium">{beneficiary.name}</TableCell>
                        <TableCell>{beneficiary.state}</TableCell>
                        <TableCell>{beneficiary.gender}</TableCell>
                        <TableCell>XXXX XXXX {beneficiary.aadhaar}</TableCell>
                      </TableRow>
                    ))}
                  </TableBody>
                </Table>
              </CardContent>
            </Card>
          </div>
        </main>
      </div>
    </div>
  )
}
